<section id="history">
    <h2>Historical Perspective on Computing</h2>
    <p>The evolution of computing has been marked by significant milestones that have shaped our modern world...</p>
    <h3>Timeline of Significant Events</h3>
    <ul>
      <li><strong>1837:</strong> Charles Babbage conceptualizes the first mechanical computer, the Analytical Engine.</li>
      <li><strong>1936:</strong> Alan Turing develops the concept of a theoretical computing machine, known as the Turing Machine.</li>
      <li><strong>1943-1944:</strong> The ENIAC, one of the first electronic general-purpose computers, is developed.</li>
      <li><strong>1971:</strong> The first microprocessor, the Intel 4004, is released.</li>
      <li><strong>1981:</strong> IBM introduces the first personal computer (PC), revolutionizing personal and business computing.</li>
      <!-- Add more milestones -->
    </ul>
  </section>

  <section id="it-basics">
    <h2>Introduction to IT Basics</h2>
    <p>Information Technology (IT) encompasses all aspects of computing, from hardware and software to networking and data management...</p>
    <h3>Key Components</h3>
    <ul>
      <li><strong>Hardware:</strong> Physical components like computers, servers, and peripherals.</li>
      <li><strong>Software:</strong> Applications and operating systems that run on hardware.</li>
      <li><strong>Networking:</strong> Connecting computers and devices to share resources and information.</li>
      <li><strong>Role of IT:</strong> IT plays a crucial role in modern organizations by supporting operations, improving efficiency, and enabling digital transformation.</li>
    </ul>
  </section>
  
<style>
  body {
    font-family: Arial, sans-serif;
    line-height: 3;
    margin: 0;
    padding: 0;
  }
  
  header {
    background: #333;
    color: #000000;
    padding: 10px 20px;
    text-align: center;
  }
  
  section {
    padding: 20px;
  }
  
  h2 {
    color: #333;
  }
  
  ul {
    list-style: none;
    padding: 0;
  }
  
  ul li {
    background: #d0dee0;
    margin: 10px 0;
    padding: 10px;
    border-left: 5px solid #2a2525;
  }is workflow will build a Python app and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Python project to Azure Function App

on:
  push:
    branches: ["main"]

env:
  AZURE_FUNCTIONAPP_NAME: 'your-app-name'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.9'                     # set this to the python version to use (e.g. '3.6', '3.7', '3.8')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        scm-do-build-during-deployment: true
        enable-oryx-build: true
